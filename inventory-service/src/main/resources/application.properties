# === HTTP ===
# in locale
%dev.quarkus.http.port=8082
# in OpenShift
%prod.quarkus.http.port=8080

# DB (prod via env)
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:postgresql}:5432/${DB_NAME}
%prod.quarkus.datasource.username=${DB_USERNAME}
%prod.quarkus.datasource.password=${DB_PASSWORD}
%prod.quarkus.hibernate-orm.database.generation=update

# === REST client verso isbn-service ===
# in locale
%dev.quarkus.rest-client.isbn-client.url=http://localhost:8081
# in test (moccato)
%test.quarkus.rest-client.isbn-client.url=http://localhost:8081
# in OpenShift (usa il Service interno)
%prod.quarkus.rest-client.isbn-client.url=http://isbn-service

# Test: H2 in-mem
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:isbn;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# Container & OpenShift
quarkus.container-image.build=true
quarkus.container-image.group=${IMAGE_REGISTRY_GROUP:bookstore}
quarkus.container-image.name=inventory-service
%prod.quarkus.openshift.route.expose=true
%prod.quarkus.kubernetes.deployment-target=openshift
%prod.quarkus.kubernetes.generate-on-build=true
%prod.quarkus.datasource.db-version=10.23.0
# %prod.quarkus.kubernetes.deploy=true

# Mapping Secret â†’ ENV
quarkus.openshift.env.mapping.DB_USERNAME.from-secret=postgresql
quarkus.openshift.env.mapping.DB_USERNAME.with-key=database-user
quarkus.openshift.env.mapping.DB_PASSWORD.from-secret=postgresql
quarkus.openshift.env.mapping.DB_PASSWORD.with-key=database-password
quarkus.openshift.env.mapping.DB_NAME.from-secret=postgresql
quarkus.openshift.env.mapping.DB_NAME.with-key=database-name
quarkus.openshift.env.vars.DB_HOST=postgresql
quarkus.openshift.env.vars.DB_PORT=5432